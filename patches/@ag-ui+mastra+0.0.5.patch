diff --git a/node_modules/@ag-ui/mastra/dist/index.js b/node_modules/@ag-ui/mastra/dist/index.js
new file mode 100644
index 0000000..ce3910b
--- /dev/null
+++ b/node_modules/@ag-ui/mastra/dist/index.js
@@ -0,0 +1,2 @@
+"use strict";var h=Object.defineProperty,j=Object.defineProperties,B=Object.getOwnPropertyDescriptor,H=Object.getOwnPropertyDescriptors,P=Object.getOwnPropertyNames,I=Object.getOwnPropertySymbols;var L=Object.prototype.hasOwnProperty,D=Object.prototype.propertyIsEnumerable;var _=(e,t,o)=>t in e?h(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,C=(e,t)=>{for(var o in t||(t={}))L.call(t,o)&&_(e,o,t[o]);if(I)for(var o of I(t))D.call(t,o)&&_(e,o,t[o]);return e},E=(e,t)=>j(e,H(t));var R=(e,t)=>{var o={};for(var n in e)L.call(e,n)&&t.indexOf(n)<0&&(o[n]=e[n]);if(e!=null&&I)for(var n of I(e))t.indexOf(n)<0&&D.call(e,n)&&(o[n]=e[n]);return o};var $=(e,t)=>{for(var o in t)h(e,o,{get:t[o],enumerable:!0})},K=(e,t,o,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of P(t))!L.call(e,r)&&r!==o&&h(e,r,{get:()=>t[r],enumerable:!(n=B(t,r))||n.enumerable});return e};var q=e=>K(h({},"__esModule",{value:!0}),e);var X={};$(X,{MastraAgent:()=>f,convertAGUIMessagesToMastra:()=>S,getLocalAgent:()=>N,getLocalAgents:()=>T,getNetwork:()=>k,getRemoteAgents:()=>O,registerCopilotKit:()=>W});module.exports=q(X);var d=require("@ag-ui/client"),G=require("@ai-sdk/ui-utils"),v=require("crypto"),b=require("rxjs");var w=require("@copilotkit/runtime"),U=require("@mastra/core/server"),J=require("@mastra/core/runtime-context");function S(e){var o,n;let t=[];for(let r of e)if(r.role==="assistant"){let s=r.content?[{type:"text",text:r.content}]:[];for(let i of(o=r.toolCalls)!=null?o:[])s.push({type:"tool-call",toolCallId:i.id,toolName:i.function.name,args:JSON.parse(i.function.arguments)});t.push({role:"assistant",content:s})}else if(r.role==="user")t.push({role:"user",content:r.content||""});else if(r.role==="tool"){let s="unknown";for(let i of e)if(i.role==="assistant"){for(let g of(n=i.toolCalls)!=null?n:[])if(g.id===r.toolCallId){s=g.function.name;break}}t.push({role:"tool",content:[{type:"tool-result",toolCallId:r.toolCallId,toolName:s,result:r.content}]})}return t}function W({path:e,resourceId:t,serviceAdapter:o=new w.ExperimentalEmptyAdapter,agents:n,setContext:r}){return(0,U.registerApiRoute)(e,{method:"ALL",handler:async s=>{let i=s.get("mastra"),g=new J.RuntimeContext;r&&await r(s,g);let m=n||f.getLocalAgents({resourceId:t,mastra:i,runtimeContext:g}),p=new w.CopilotRuntime({agents:m});return(0,w.copilotRuntimeNodeHttpEndpoint)({endpoint:e,runtime:p,serviceAdapter:o}).handle(s.req.raw,{})}})}async function O({mastraClient:e,resourceId:t}){let o=await e.getAgents();return Object.entries(o).reduce((n,[r])=>{let s=e.getAgent(r);return n[r]=new f({agentId:r,agent:s,resourceId:t}),n},{})}function T({mastra:e,resourceId:t,runtimeContext:o}){let n=e.getAgents()||{},s=(e.getNetworks()||[]).reduce((g,m)=>(g[m.name]=new f({agentId:m.name,agent:m,resourceId:t,runtimeContext:o}),g),{}),i=Object.entries(n).reduce((g,[m,p])=>(g[m]=new f({agentId:m,agent:p,resourceId:t,runtimeContext:o}),g),{});return C(C({},i),s)}function N({mastra:e,agentId:t,resourceId:o,runtimeContext:n}){let r=e.getAgent(t);if(!r)throw new Error(`Agent ${t} not found`);return new f({agentId:t,agent:r,resourceId:o,runtimeContext:n})}function k({mastra:e,networkId:t,resourceId:o,runtimeContext:n}){let r=e.getNetwork(t);if(!r)throw new Error(`Network ${t} not found`);return new f({agentId:r.name,agent:r,resourceId:o,runtimeContext:n})}var f=class extends d.AbstractAgent{constructor(s){var i=s,{agent:t,resourceId:o,runtimeContext:n}=i,r=R(i,["agent","resourceId","runtimeContext"]);super(r),this.agent=t,this.resourceId=o,this.runtimeContext=n}run(t){let o=(0,v.randomUUID)();return new b.Observable(n=>((async()=>{var i,g,m;let s={type:d.EventType.RUN_STARTED,threadId:t.threadId,runId:t.runId};if(n.next(s),this.isLocalMastraAgent(this.agent)){let a=await this.agent.getMemory();if(a&&t.state&&Object.keys(t.state||{}).length>0){let l=await a.getThreadById({threadId:t.threadId});l||(l={id:t.threadId,title:"",metadata:{},resourceId:(i=this.resourceId)!=null?i:t.threadId,createdAt:new Date,updatedAt:new Date});let A=JSON.parse((m=(g=l.metadata)==null?void 0:g.workingMemory)!=null?m:"{}"),p=t.state,{messages:y}=p,x=R(p,["messages"]),M=JSON.stringify(C(C({},A),x));await a.saveThread({thread:E(C({},l),{metadata:E(C({},l.metadata),{workingMemory:M})})})}}try{await this.streamMastraAgent(t,{onTextPart:a=>{let l={type:d.EventType.TEXT_MESSAGE_CHUNK,role:"assistant",messageId:o,delta:a};n.next(l)},onToolCallPart:a=>{let l={type:d.EventType.TOOL_CALL_START,parentMessageId:o,toolCallId:a.toolCallId,toolCallName:a.toolName};n.next(l);let A={type:d.EventType.TOOL_CALL_ARGS,toolCallId:a.toolCallId,delta:JSON.stringify(a.args)};n.next(A);let y={type:d.EventType.TOOL_CALL_END,toolCallId:a.toolCallId};n.next(y)},onToolResultPart(a){let l={type:d.EventType.TOOL_CALL_RESULT,toolCallId:a.toolCallId,content:JSON.stringify(a.result),messageId:(0,v.randomUUID)(),role:"tool"};n.next(l)},onFinishMessagePart:async()=>{o=(0,v.randomUUID)()},onError:a=>{console.error("error",a),n.error(a)},onRunFinished:async()=>{if(this.isLocalMastraAgent(this.agent))try{let a=await this.agent.getMemory();if(a){let l=await a.getWorkingMemory({threadId:t.threadId,memoryConfig:{workingMemory:{enabled:!0}}});if(typeof l=="string"){let A=JSON.parse(l);if(A&&!("$schema"in A)){let y={type:d.EventType.STATE_SNAPSHOT,snapshot:A};n.next(y)}}}}catch(a){console.error("Error sending state snapshot",a)}n.next({type:d.EventType.RUN_FINISHED,threadId:t.threadId,runId:t.runId}),n.complete()}})}catch(a){console.error("Stream error:",a),n.error(a)}})(),()=>{}))}isLocalMastraAgent(t){return"getMemory"in t}async streamMastraAgent({threadId:t,runId:o,messages:n,tools:r},{onTextPart:s,onFinishMessagePart:i,onToolCallPart:g,onToolResultPart:m,onError:p,onRunFinished:a}){var M;let l=r.reduce((c,u)=>(c[u.name]={id:u.name,description:u.description,inputSchema:u.parameters},c),{}),A=(M=this.resourceId)!=null?M:t,y=S(n),x=this.runtimeContext;if(this.isLocalMastraAgent(this.agent))try{let c=await this.agent.stream(y,{threadId:t,resourceId:A,runId:o,clientTools:l,runtimeContext:x});if(c&&typeof c=="object")if("toDataStreamResponse"in c&&typeof c.toDataStreamResponse=="function"){let u=c.toDataStreamResponse();if(u&&u.body)await(0,G.processDataStream)({stream:u.body,onTextPart:s,onToolCallPart:g,onToolResultPart:m,onFinishMessagePart:i}),await(a==null?void 0:a());else throw new Error("Invalid data stream response from local agent")}else await(0,G.processDataStream)({stream:c,onTextPart:s,onToolCallPart:g,onToolResultPart:m,onFinishMessagePart:i}),await(a==null?void 0:a());else throw new Error("Invalid response from local agent")}catch(c){p==null||p(c)}else try{let c=await this.agent.stream({threadId:t,resourceId:A,runId:o,messages:y,clientTools:l});if(c&&typeof c.processDataStream=="function")await c.processDataStream({onTextPart:s,onToolCallPart:g,onToolResultPart:m,onFinishMessagePart:i}),await(a==null?void 0:a());else throw new Error("Invalid response from remote agent")}catch(c){p==null||p(c)}}static async getRemoteAgents(t){return O(t)}static getLocalAgents(t){return T(t)}static getLocalAgent(t){return N(t)}static getNetwork(t){return k(t)}};0&&(module.exports={MastraAgent,convertAGUIMessagesToMastra,getLocalAgent,getLocalAgents,getNetwork,getRemoteAgents,registerCopilotKit});
+//# sourceMappingURL=index.js.map
\ No newline at end of file
